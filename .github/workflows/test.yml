name: Test

on:
  pull_request:
  push:
    branches:
      - master
      - release/*
      - circleci-gha-tests
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover:
    name: Discover Test Groups
    runs-on: ubuntu-latest
    outputs:
      groups: ${{ steps.test.outputs.groups }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-go
      - id: test
        env:
          DEFAULTS: |
            {
              "name": "",
              "packages": [],
              "runner": ["self-hosted", "linux", "x64", "large"],
              "go_test_flags": "",
              "skip_conformance": "1",
              "test_rustproofs_logs": "0",
              "format": "standard-verbose",
              "needs_params": false,
              "needs_statediff": false,
              "needs_yugabytedb": false,
            }
          GROUPS: |
            [
              {
                "name": "multicore-sdr",
                "runner": "ubuntu-latest",
                "packages": ["./storage/sealer/ffiwrapper"],
                "go_test_flags": "-run=TestMulticoreSDR",
                "test_rustproofs_logs": "1"
              }, {
                "name": "conformance",
                "packages": ["./conformance"],
                "go_test_flags": "-run=TestConformance",
                "skip_conformance": "0",
                "format": "pkgname-and-test-fails",
                "needs_params": true,
                "needs_statediff": true
              }, {
                "name": "itest-worker",
                "runner": ["self-hosted", "linux", "x64", "2xlarge"],
                "needs_params": true
              }, {
                "name": "itest-sector_import_full",
                "runner": ["self-hosted", "linux", "x64", "xlarge"],
                "needs_params": true
              }, {
                "name": "itest-sector_import_simple",
                "runner": ["self-hosted", "linux", "x64", "xlarge"],
                "needs_params": true
              }, {
                "name": "itest-sector_pledge",
                "runner": ["self-hosted", "linux", "x64", "4xlarge"],
                "needs_params": true
              }, {
                "name": "itest-wdpost",
                "runner": ["self-hosted", "linux", "x64", "4xlarge"],
                "needs_params": true
              }, {
                "name": "itest-harmonydb",
                "needs_yugabytedb": true
              }, {
                "name": "itest-harmonytask",
                "needs_yugabytedb": true
              }, {
                "name": "unit-node",
                "packages": ["./node/..."]
              }, {
                "name": "unit-storage",
                "runner": ["self-hosted", "linux", "x64", "2xlarge"],
                "packages": ["./storage/...", "./extern/..."],
                "needs_params": true
              }, {
                "name": "unit-cli",
                "packages": ["./cli/...", "./cmd/...", "./api/..."],
                "needs_params": true
              }
            ]
        run: go run ./.github/scripts/extend-test-groups.go -defaults "$DEFAULTS" -groups "$GROUPS" -output "$GITHUB_OUTPUT"
  fetch:
    name: Fetch Proof Prameters
    runs-on: ubuntu-latest
    outputs:
      key: ${{ steps.cache.outputs.key }}
      path: ${{ steps.cache.outputs.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-ubuntu-deps
      - uses: ./.github/actions/install-go
      - id: cache
        run: |
          echo "key=v26-2k-lotus-params" | tee -a $GITHUB_OUTPUT
          echo "path=/var/tmp/filecoin-proof-parameters/" | tee -a $GITHUB_OUTPUT
      - id: params
        uses: actions/cache/restore@v4
        with:
          key: ${{ steps.cache.outputs.key }}
          path: ${{ steps.cache.outputs.path }}
          lookup-only: true
      - if: steps.params.outputs.cache-hit != 'true'
        run: make lotus
      - if: steps.params.outputs.cache-hit != 'true'
        run: ./lotus fetch-params 2048
      - if: steps.params.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache.outputs.key }}
          path: ${{ steps.cache.outputs.path }}
  cache:
    name: Cache Go Modules
    runs-on: ubuntu-latest
    outputs:
      key: ${{ steps.cache.outputs.key }}
      path: ${{ steps.cache.outputs.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-ubuntu-deps
      - uses: ./.github/actions/install-go
      - id: cache
        env:
          KEY: ${{ github.workflow }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        run: |
          echo "key=$KEY" | tee -a $GITHUB_OUTPUT
          echo "path<<EOF" | tee -a $GITHUB_OUTPUT
          echo "$(go env GOPATH)/pkg/mod" | tee -a $GITHUB_OUTPUT
          echo "$(go env GOCACHE)" | tee -a $GITHUB_OUTPUT
          echo "EOF" | tee -a $GITHUB_OUTPUT
      - id: modules
        uses: actions/cache/restore@v4
        with:
          key: ${{ steps.cache.outputs.key }}
          path: ${{ steps.cache.outputs.path }}
          lookup-only: true
      - if: steps.modules.outputs.cache-hit != 'true'
        run: go install gotest.tools/gotestsum@latest
      - if: steps.modules.outputs.cache-hit != 'true'
        run: go test -run none ./...
      - if: steps.modules.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.cache.outputs.key }}
          path: ${{ steps.cache.outputs.path }}
  test:
    needs: [discover, cache, fetch]
    name: Test (${{ matrix.name }})
    runs-on: ${{ github.repository == 'filecoin-project/lotus' && matrix.runner || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.discover.outputs.groups) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: ./.github/actions/install-ubuntu-deps
      - uses: ./.github/actions/install-go
      - uses: actions/cache/restore@v4
        with:
          key: ${{ needs.cache.outputs.key }}
          path: ${{ needs.cache.outputs.path }}
          fail-on-cache-miss: true
      - run: go install gotest.tools/gotestsum@latest
      - run: make deps
      - if: ${{ matrix.needs_params }}
        uses: actions/cache/restore@v4
        with:
          key: ${{ needs.fetch.outputs.key }}
          path: ${{ needs.fetch.outputs.path }}
          fail-on-cache-miss: true
      - if: ${{ matrix.needs_yugabytedb }}
        uses: ./.github/actions/start-yugabytedb
        timeout-minutes: 3
      # TODO: Install statediff (used to be used for conformance)
      - id: reports
        run: mktemp -d | xargs -0 -I{} echo "path={}" | tee -a $GITHUB_OUTPUT
      # TODO: Track coverage (used to be tracked for conformance)
      - env:
          NAME: ${{ matrix.name }}
          LOTUS_SRC_DIR: ${{ github.workspace }}
          LOTUS_HARMONYDB_HOSTS: 127.0.0.1
          REPORTS_PATH: ${{ steps.reports.outputs.path }}
          SKIP_CONFORMANCE: ${{ matrix.skip_conformance || 1 }}
          TEST_RUSTPROOFS_LOGS: ${{ matrix.test_rustproofs_logs || 0 }}
          FORMAT: ${{ matrix.format || 'standard-verbose' }}
          PACKAGES: ${{ join(matrix.packages, ' ') }}
        run: |
          gotestsum \
            --format "$FORMAT" \
            --junitfile "$REPORTS_PATH/$NAME.xml" \
            --jsonfile "$REPORTS_PATH/$NAME.json" \
            --packages="$PACKAGES" \
            -- ${{ matrix.go_test_flags || '' }}
      - if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ steps.reports.outputs.path }}/${{ matrix.name }}.xml
            ${{ steps.reports.outputs.path }}/${{ matrix.name }}.json
        continue-on-error: true
